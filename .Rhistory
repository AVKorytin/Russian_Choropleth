r <- readRDS("RUS_adm2.rds")
u <- readRDS("UKR_adm2.rds")
head(u@data)
table(u$NAME_1)
u@data[1:23+23+25+11,]
u@data[0:24+23+25+11,]
1:23+23+25+11
u@data[u$NAME_1=="Sevastopol'",]
which(u$NAME_1=="Sevastopol'")
which(u$NAME_1=="Sevastopol'"|u$NAME_1=="Crimea")
which(u$NAME_1==("Sevastopol'"|"Crimea")
)
which(u$NAME_1=="Sevastopol'|Crimea"
)
which(u$NAME_1 %in% c("Sevastopol'","Crimea"))
table(r$NAME_1)
plot(r)
for(i in which(r$NAME_1=="Chukot")) {
for(j in 1:length(r@polygons[[i]]@Polygons)) {
r@polygons[[i]]@Polygons[[j]]@coords[,1] <-
sapply(r@polygons[[i]]@Polygons[[j]]@coords[,1],function(x) ifelse(x<0,359.999+x,x))
}}
plot(r)
r@bbox
r@bbox[1,1]
r@bbox[1,1] <- 0
plot(r)
r2 <- rbind(r, u[u$NAME_1 %in% c("Sevastopol'","Crimea"),])
u@polygons[[1]]@Polygons[[1]]
u@polygons[[1]]@plotOrder
u@plotOrder
u@polygons[[1]]@ID
dim(r@data)
class(u@polygons[[1]]@ID)
cr <- u[u$NAME_1 %in% c("Sevastopol'","Crimea"),]
ength(cr@polygons)
length(cr@polygons)
sapply(cr@polygons, function(x) x@ID)
for(i in 1:length(cr@polygons)) cr@polygons[[i]]@ID <- paste0("u", cr@polygons[[i]]@ID)
sapply(cr@polygons, function(x) x@ID)
r2 <- rbind(r, cr)
row.names(cr@data)
for(i in 1:length(cr@polygons)) cr@polygons[[i]]@ID <- as.numeric(cr@polygons[[i]]@ID)+10^4
cr <- u[u$NAME_1 %in% c("Sevastopol'","Crimea"),]
for(i in 1:length(cr@polygons)) cr@polygons[[i]]@ID <- as.numeric(cr@polygons[[i]]@ID)+10^4
for(i in 1:length(cr@polygons)) cr@polygons[[i]]@ID <- paste0("u", cr@polygons[[i]]@ID)
row.names(cr@data) <- sapply(cr@polygons, function(x) x@ID)
r2 <- rbind(r, cr)
getSmallPolys <- function(poly, minarea=0.01) {
# Get the areas
areas <- lapply(poly@polygons, function(x) sapply(x@Polygons, function(y) y@area))
# Quick summary of the areas
print(quantile(unlist(areas)))
# Which are the big polygons?
bigpolys <- lapply(areas, function(x) which(x > minarea))
length(unlist(bigpolys))
# Get only the big polygons
for(i in 1:length(bigpolys)) {
poly@polygons[[i]]@Polygons <- poly@polygons[[i]]@Polygons[bigpolys[[i]]]
poly@polygons[[i]]@plotOrder <- 1:length(poly@polygons[[i]]@Polygons)
}
return(poly)
}
r2 <- getSmallPolys(rbind(r, cr))
plot(r2)
plot(r2)
r2 <- rbind(r, cr)
plot(r2)
cr <- u[u$NAME_1 %in% c("Sevastopol'","Crimea"),]
for(i in 1:length(cr@polygons)) cr@polygons[[i]]@ID <- paste0("100", cr@polygons[[i]]@ID)
row.names(cr@data) <- sapply(cr@polygons, function(x) x@ID)
r2 <- getSmallPolys(rbind(r, cr))
plot(r2)
r2@plotOrder
tail(r2@plotOrder)
sum(duplicated(r2@plotOrder))
length(duplicated(r2@plotOrder))
length(duplicated(r@plotOrder))
cr <- u[u$NAME_1 %in% c("Sevastopol'","Crimea"),]
for(i in 1:length(cr@polygons)) cr@polygons[[i]]@ID <- paste0("u", cr@polygons[[i]]@ID)
row.names(cr@data) <- sapply(cr@polygons, function(x) x@ID)
r2 <- getSmallPolys(rbind(r, cr))
r2@polygons <- lapply(r2@polygons, "comment<-", NULL)
plot(r2)
require(rgeos)
install.packages("rgeos")
install.packages("rgeos")
require(rgeos)
sr <- rgeos::gSimplify(spgeom = gadm3, tol = 0.05, topologyPreserve = FALSE)
sr <- rgeos::gSimplify(spgeom = r2, tol = 0.05, topologyPreserve = FALSE)
plot(sr)
r3 <- SpatialPolygonsDataFrame(sr, r2@data, match.ID = TRUE)
length(sr@polygons)
sr <- rgeos::gSimplify(spgeom = r2, tol = 0.1, topologyPreserve = FALSE)
sr <- rgeos::gSimplify(spgeom = r2, tol = 0.05, topologyPreserve = FALSE)
sr <- rgeos::gSimplify(spgeom = r2, tol = 0.03, topologyPreserve = FALSE)
sr <- rgeos::gSimplify(spgeom = r2, tol = 0.02, topologyPreserve = FALSE)
sr <- rgeos::gSimplify(spgeom = r2, tol = 0.01, topologyPreserve = FALSE)
sr <- rgeos::gSimplify(spgeom = r2, tol = 0.05, topologyPreserve = T)
sr <- rgeos::gSimplify(spgeom = r2, tol = 0.025, topologyPreserve = T)
sr <- rgeos::gSimplify(spgeom = r2, tol = 0.01, topologyPreserve = T)
sr <- rgeos::gSimplify(spgeom = r2, tol = 0.05, topologyPreserve = FALSE)
x <- sapply(sr@polygons, function(x) x@ID)
row.names(r2@data)[!(row.names(r2@data) %in% x)]
y <- row.names(r2@data)[!(row.names(r2@data) %in% x)]
plot(r2[y,])
y <- which(!(row.names(r2@data) %in% x))
plot(r2[y,])
y <- sapply(r2@polygons, function(x) x@ID)
plot(r2[!(y %in% x)])
head(y)
head(x)
plot(r2[!(y %in% x),])
rus <- readRDS("rus.Rds")
class(rus)
g4 <- readRDS("gadm4.Rds")
plot(sr)
plot(g4, border = "red", add = TRUE, lwd = 2)
length(x)
length(y)
which(!(y %in% x))
plot(r2)
plot(sr, border = "red", add = TRUE)
x_ <- SpatialPolygonsDataFrame(sr, r2@data[1:2038], match.ID = TRUE)
x <- merge(fortify(x_, region = "ID_1"), x_@data, by.x = "id", by.y = "ID_1", all.x = TRUE)
ggplot(data = x, aes(x = long, y = lat, group = group)) +
geom_polygon(aes(fill = ID_1), color = "white") +
coord_map(projection = 'azequidist') +
guides(fill=FALSE)
require(ggplot2)
x_ <- SpatialPolygonsDataFrame(sr, r2@data[1:2038,], match.ID = TRUE)
x <- merge(fortify(x_, region = "ID_1"), x_@data, by.x = "id", by.y = "ID_1", all.x = TRUE)
p <- ggplot(data = x, aes(x = long, y = lat, group = group)) +
geom_polygon(aes(fill = ID_1), color = "white") +
coord_map(projection = 'azequidist') +
guides(fill=FALSE)
p
head(x)
p <- ggplot(data = x, aes(x = long, y = lat, group = group)) +
geom_polygon(aes(fill = id), color = "white") +
coord_map(projection = 'azequidist') +
guides(fill=FALSE)
p
x <- merge(fortify(x_, region = "ID_2"), x_@data, by.x = "id", by.y = "ID_2", all.x = TRUE)
p <- ggplot(data = x, aes(x = long, y = lat, group = group)) +
geom_polygon(aes(fill = id), color = "white") +
coord_map(projection = 'azequidist') +
guides(fill=FALSE)
p
head(x_@data)
p <- ggplot(data = x_, aes(x = long, y = lat, group = group)) +
geom_polygon(aes(fill = id), color = "white") +
coord_map(projection = 'azequidist') +
guides(fill=FALSE)
p
head(x)
p <- ggplot(data = x_, aes(x = long, y = lat, group = group)) +
geom_polygon(aes(fill = group), color = "white") +
coord_map(projection = 'azequidist') +
guides(fill=FALSE)
p
